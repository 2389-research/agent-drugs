rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Anyone can read drugs (public catalog)
    match /drugs/{drugId} {
      allow read: if true;
      allow write: if false; // Only admins via console
    }

    // Agents collection: JWT-based authentication for MCP
    // Users can manage their own agents
    match /agents/{agentId} {
      // Users can read their own agents
      allow read: if request.auth != null &&
        resource.data.userId == request.auth.uid;

      // Users can create agents (via Cloud Function generateJWT)
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid &&
        request.resource.data.keys().hasAll(['userId', 'name', 'jwt', 'createdAt', 'lastUsedAt']);

      // Users can update lastUsedAt timestamp
      allow update: if request.auth != null &&
        resource.data.userId == request.auth.uid &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['lastUsedAt']);

      // Users can delete their own agents
      allow delete: if request.auth != null &&
        resource.data.userId == request.auth.uid;
    }

    // Usage events: MCP server writes, users read their own
    match /usage_events/{eventId} {
      // Users can read their own events
      allow read: if request.auth != null &&
        resource.data.userId == request.auth.uid;

      // Allow MCP server to create events (validates JWT first)
      // MCP server uses service account, not user auth
      allow create: if true;

      // No updates or deletes
      allow update, delete: if false;
    }

    // Legacy api_keys collection: Deprecated, will be removed
    // Kept for backward compatibility during migration
    match /api_keys/{keyId} {
      allow read: if true;
      allow create: if false; // No new API keys
      allow update, delete: if false;
    }
  }
}
